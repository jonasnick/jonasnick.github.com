<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lightning | nickler's]]></title>
  <link href="https://jonasnick.github.io/blog/categories/lightning/atom.xml" rel="self"/>
  <link href="https://jonasnick.github.io/"/>
  <updated>2023-07-31T15:19:51+00:00</updated>
  <id>https://jonasnick.github.io/</id>
  <author>
    <name><![CDATA[Jonas Nick]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nix-bitcoin]]></title>
    <link href="https://jonasnick.github.io/blog/2019/06/25/nix-bitcoin/"/>
    <updated>2019-06-25T22:39:00+00:00</updated>
    <id>https://jonasnick.github.io/blog/2019/06/25/nix-bitcoin</id>
    <content type="html"><![CDATA[<p><a href="https://youtu.be/BcjKejXlLbM?t=15873"><img src="https://jonasnick.github.io/images/lightninghackday-nix-bitcoin.png" width="560"></a></p>

<p>nix-bitcoin (<a href="https://github.com/fort-nix/nix-bitcoin">github.com/fort-nix/nix-bitcoin</a>) is a project I contribute to in my spare time that provides nix packages and nixos modules for easily installing Bitcoin nodes and higher layer protocols.
The initial idea was to build myself a lightning node in a reproducible way.
I talked more about the motivation and how to use it at the <a href="https://lightninghackday.fulmo.org/">LightningHackdayMUC</a> (<a href="https://youtu.be/BcjKejXlLbM?t=15873">video</a>, <a href="/slides/2019-nix-bitcoin-2.pdf">slides</a>).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Schnorr and Taproot in Lightning]]></title>
    <link href="https://jonasnick.github.io/blog/2018/09/04/schnorr-and-taproot-in-lightning/"/>
    <updated>2018-09-04T13:24:00+00:00</updated>
    <id>https://jonasnick.github.io/blog/2018/09/04/schnorr-and-taproot-in-lightning</id>
    <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=QrX1SpD6l9g&feature=youtu.be&t=7524"><img src="https://jonasnick.github.io/images/lightninghackday-youtube.png" width="560"></a></p>

<p>Last weekend a bunch of hackers assembled for the 3rd Lightning Netword Hackday in Berlin.
The event was packed with interesting sessions, neat hacks and exciting discussions which were concluded with the traditional dinner &amp; drinks at ROOM77.
I gave a talk about &ldquo;Schnorr and Taproot in Lightning&rdquo; (<a href="/slides/2018-hackday.pdf">slides</a>, <a href="https://www.youtube.com/watch?v=QrX1SpD6l9g&amp;feature=youtu.be&amp;t=7524">video</a>) focusing on privacy and security implications.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blind Signatures in Scriptless Scripts]]></title>
    <link href="https://jonasnick.github.io/blog/2018/07/31/blind-signatures-in-scriptless-scripts/"/>
    <updated>2018-07-31T14:53:00+00:00</updated>
    <id>https://jonasnick.github.io/blog/2018/07/31/blind-signatures-in-scriptless-scripts</id>
    <content type="html"><![CDATA[<p><a href="https://youtu.be/XORDEX-RrAI?t=25484"><img src="https://jonasnick.github.io/images/bob-youtube.png" width="560"></a></p>

<p>At the recent Building on Bitcoin conference in Lisbon I gave a talk about a few new ideas in the scriptless scripts framework.
The first part was mainly about <a href="https://github.com/apoelstra/scriptless-scripts/pull/1">blind coinswaps</a>, which is a way to swap bitcoins with a tumbler without revealing which coin are swapped.
The second part about how to exchange ecash tokens peer-to-peer using scriptless scripts and Brands credentials.
You can find the talk <a href="https://youtu.be/XORDEX-RrAI?t=25484">on youtube</a> and the slides <a href="/slides/2018-bob.pdf">here</a>.
Thanks to <a href="https://twitter.com/kanzure">kanzure</a> there&rsquo;s also a <a href="https://diyhpl.us/wiki/transcripts/building-on-bitcoin/2018/blind-signatures-and-scriptless-scripts/">transcript</a> of the talk.</p>

<p>EDIT: I&rsquo;ve added a note about the security of Blind Schnorr signatures against forgery to the <a href="/slides/2018-bob.pdf">slides</a>.
In short, a naive implementation of the scheme is vulnerable to <a href="http://www.enseignement.polytechnique.fr/informatique/profs/Francois.Morain/Master1/Crypto/projects/Wagner02.pdf">Wagner&rsquo;s attack</a>.
An attacker can forge a signature using 65536 parallel signing sessions and <code>O(2^32)</code> work.</p>
]]></content>
  </entry>
  
</feed>
