<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[nickler's]]></title>
  <link href="http://jonasnick.github.com/atom.xml" rel="self"/>
  <link href="http://jonasnick.github.com/"/>
  <updated>2012-11-28T21:18:09+01:00</updated>
  <id>http://jonasnick.github.com/</id>
  <author>
    <name><![CDATA[Jonas Nick]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Evolving bitcoin trade bot]]></title>
    <link href="http://jonasnick.github.com/blog/2012/11/28/evolving-bitcoin-trade-bot/"/>
    <updated>2012-11-28T21:02:00+01:00</updated>
    <id>http://jonasnick.github.com/blog/2012/11/28/evolving-bitcoin-trade-bot</id>
    <content type="html"><![CDATA[<p><img src="http://jonasnick.github.com/images/bagalute/index.png">
<a href="https://github.com/jonasnick/bagalute">Bagalute</a> is a trade bot, designed for buying a currency (bitcoin) at the the right time. As a decision criterium it uses the relative strength index (RSI). The bot looks at the price development of the last twelve hours and runs an evolutionary algorithm to determine the optimal parameters for the RSI in that time frame. Then, it uses these parameters for the next time frame. Currently the bot uses for debugging purposes a dummy interface to trade. The actual success of the bot was sparsely tested but had negative results, maybe due to a general downtrend of prices.
I wrote it during my 2nd semester break</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Labormensch - a puzzle]]></title>
    <link href="http://jonasnick.github.com/blog/2012/11/28/labormensch-a-puzzle/"/>
    <updated>2012-11-28T20:31:00+01:00</updated>
    <id>http://jonasnick.github.com/blog/2012/11/28/labormensch-a-puzzle</id>
    <content type="html"><![CDATA[<p>This is a mod for Valve&#8217;s source engine. It deludes the player&#8217;s cognitive map of the world. Despite his efforts to escape he always returns to his start location. However there is one solution to escape&#8230;</p>

<iframe class="youtube-player" width="420" height="315" src="http://www.youtube.com/embed/3QaHo0QgKeQ"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kinect data in Blender]]></title>
    <link href="http://jonasnick.github.com/blog/2012/11/28/kinect-data-in-blender/"/>
    <updated>2012-11-28T20:17:00+01:00</updated>
    <id>http://jonasnick.github.com/blog/2012/11/28/kinect-data-in-blender</id>
    <content type="html"><![CDATA[<p>Importing raw data points from Microsofts Kinect is fun, despite my lacking blender skills. But the huge filesizes prevent further use.</p>

<iframe class="youtube-player" width="420" height="315" src="http://www.youtube.com/embed/I-hM3QZJZZw"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snake in Racket]]></title>
    <link href="http://jonasnick.github.com/blog/2012/11/28/snake-in-racket/"/>
    <updated>2012-11-28T19:28:00+01:00</updated>
    <id>http://jonasnick.github.com/blog/2012/11/28/snake-in-racket</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/jonasnick/snake"><img src="http://jonasnick.github.com/images/snake.png"></a>
Snake implementation
<a href="https://github.com/jonasnick/snake">Snake</a>
 in Dr.Racket with GUI. Homework of the first semester of computer science.
The music of the game is generated by the player&#8217;s movements and his success.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First post]]></title>
    <link href="http://jonasnick.github.com/blog/2012/11/26/first-post/"/>
    <updated>2012-11-26T20:47:00+01:00</updated>
    <id>http://jonasnick.github.com/blog/2012/11/26/first-post</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
